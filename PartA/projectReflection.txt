Praise:
  - Classes exhibit good dependency injection; each object
    explicitly takes its dependencies (and only its dependencies) through
    the constructor, and only internal structures are initialised within
  - Well documented, with parameter descriptions in docstrings and
    well named variables
  - Good modularisation, with interfaces and instances passed in for most
    computation points that might be subject to change later on, e.g.
    strategies, mail storage/source
  - Specific exceptions are thrown and handled, giving precise feedback and
    the option to trace

Constructive Criticism:
  - Package structure holds everywhere except samples, which does not
    describe or differentiate contents. Having a 'strategies'
    subpackage might be more self-documenting
  - A large number of constant declarations are made in Simulation at
    the top level. To group and better differentiate them, external
    classes like SimulationMailStorage and SimulationMailGenerator
    might be a more readable way to store constants which categorise
    easily. In the case of a Simulation, these might be private
    inner classes -- but external classes favour the modelling approach
  - Along these lines, a class for Building might be appropriate -- and
    possibly a BuildingFactory -- both to support command line arguments
    and to give a concrete object for the simulation to test. The
    class Simulation is connected to mail delivery only through the
    concept of a building
  - The simulation printing logic is peppered throughout the top level
    runSimulation() method. This could be contained in another Logger
    class, so that the Simulation is agnostic about how it reports and
    vice-versa
  - There are typographic errors in some variables, which might present
    difficulties to others wishing to use them
  - The MailStorage interface is the only Java file without a meaningful
    docstring, but seems to be a nexus of the computation in Simulation
  - The original call to runSimulation had its eigth argument as 'true',
    which rather than being self-documenting, requires a documentation
    lookup to understand. This could be improved with a named variable or
    an enum (which would also permit more than two possibilities)
